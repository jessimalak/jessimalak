{"version":3,"sources":["assets/logoColor05.png","assets lazy /^/.*$/ groupOptions: {} namespace object","components/Icon.tsx","screens/Index.tsx","projects.ts","screens/Project.tsx","components/Card.tsx","screens/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","Icon","name","size","color","style","fontSize","IndexScreen","className","src","Logo","alt","href","target","rel","to","projects","insitu","logo","icon","desc","platforms","type","quorum","intiva","ProjectScreen","useParams","navigate","useNavigate","useState","data","setData","useEffect","info","console","log","img","default","p","Card","image","setImage","useLayoutEffect","ProjectsScreen","setProjects","ps","projects_","forEach","project","t","Layout","Navbar","Container","fluid","Nav","Item","App","path","element","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe98c70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoColor05.0f24a5e6.png\";","var map = {\n\t\"./inSitu/ic_launcher-playstore.png\": [\n\t\t48,\n\t\t4\n\t],\n\t\"./inSitu/logo_c1.png\": [\n\t\t49,\n\t\t5\n\t],\n\t\"./inSitu/logo_w1.png\": [\n\t\t50,\n\t\t6\n\t],\n\t\"./intiva/ic_launcher-playstore.png\": [\n\t\t51,\n\t\t7\n\t],\n\t\"./intiva/logo_c.png\": [\n\t\t52,\n\t\t8\n\t],\n\t\"./intiva/logo_w.png\": [\n\t\t53,\n\t\t9\n\t],\n\t\"./logoColor05.png\": [\n\t\t29\n\t],\n\t\"./quorum/ic_launcher-playstore.png\": [\n\t\t54,\n\t\t10\n\t],\n\t\"./quorum/logoc1.png\": [\n\t\t55,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 31;\nmodule.exports = webpackAsyncContext;","interface IconProps {\r\n  name: string;\r\n  size?: number | string;\r\n  color?: string;\r\n}\r\n\r\nexport default function Icon({ name, size, color }: IconProps) {\r\n    return (\r\n      //@ts-ignore\r\n    <ion-icon name={name} style={{ ...(size ? { fontSize: size } : \"\") }} />\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/logoColor05.png\";\r\nimport Icon from \"../components/Icon\";\r\nexport default function IndexScreen() {\r\n  return (\r\n    <div className=\"center-content screen\">\r\n      <img src={Logo} alt=\"logo\" />\r\n      <h2>\r\n        Diseñadora multimedia, desarrolladora web y móvil, y\r\n        amante apasionada de la programación.\r\n      </h2>\r\n      <div className='social-icons'>\r\n        <a\r\n          href=\"http://instagram.com/jessimalak\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"logo-instagram\" />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/jessimalak/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"logo-linkedin\" />\r\n        </a>\r\n        <a\r\n          href=\"http://github.com/jessimalak\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"logo-github\" />\r\n        </a>\r\n      </div>\r\n      <Link to='projects'>Ver mis proyectos</Link>\r\n    </div>\r\n  );\r\n}\r\n","const projects = {\r\n  insitu: {\r\n    name: \"In Situ\",\r\n    logo: \"inSitu/logo_c1.png\",\r\n    icon: \"inSitu/ic_launcher-playstore.png\",\r\n    desc: \"lorem ipsum dolor sit amet, description larga pero no tanto, he he he, touch  me, touch me hard\",\r\n    platforms: [\"android\", \"react\", \"pwa\"],\r\n    type: \"personales\",\r\n  },\r\n  quorum: {\r\n    name: \"Quorum\",\r\n    logo: \"quorum/logoc1.png\",\r\n    icon: \"quorum/ic_launcher-playstore.png\",\r\n    desc: \"lorem ipsum dolor sit amet, description larga pero no tanto, he he he, touch  me, touch me hard\",\r\n    platforms: [\"android\", \"electron\"],\r\n    type: \"personales\",\r\n  },\r\n  intiva: {\r\n    name: \"Intiva\",\r\n    logo: \"intiva/logo_w.png\",\r\n    icon: \"intiva/ic_launcher-playstore.png\",\r\n    desc: \"lorem ipsum dolor sit amet, description larga pero no tanto, he he he, touch  me, touch me hard\",\r\n    platforms: [\"android\", \"apple-appstore\", \"apple\", \"microsoft\"],\r\n    type: \"laborales\",\r\n  },\r\n};\r\n\r\nexport default projects;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport projects from \"../projects\";\r\nimport { project } from \"../types\";\r\nimport Icon from \"../components/Icon\";\r\n\r\nexport default function ProjectScreen() {\r\n  const { name } = useParams();\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState<project>();\r\n  useEffect(() => {\r\n    const info = projects[name || \"\"];\r\n    console.log(info);\r\n    if (info) {\r\n      import(\"../assets/\" + info.icon).then((img) =>\r\n        setData({ ...info, logo: img.default })\r\n      );\r\n    } else navigate(\"/\");\r\n  }, []);\r\n  return (\r\n    <section className=\"screen\">\r\n      <div className=\"horizontal-container between\">\r\n        <h1>{data?.name}</h1>\r\n        <div className=\"icon-container\">\r\n          {data?.platforms.map((p) => (\r\n            <Icon name={\"logo-\" + p} size=\"2rem\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <img src={data?.logo} alt=\"icono\" className='app-icon' />\r\n    </section>\r\n  );\r\n}\r\n","import { useLayoutEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Icon from \"./Icon\";\r\n\r\ninterface CardProps {\r\n  name: string;\r\n  logo: string;\r\n  platforms: string[];\r\n  id: string;\r\n}\r\nexport default function Card({ name, logo, platforms, id }: CardProps) {\r\n  const [image, setImage] = useState(\"\");\r\n  useLayoutEffect(() => {\r\n    import(\"../assets/\" + logo).then((img) => setImage(img.default));\r\n  });\r\n  return (\r\n    <Link to={id}>\r\n      <div className=\"card\">\r\n        <img src={image} alt=\"logo\" />\r\n        <div className=\"horizontal-container icon-container\">\r\n          {platforms.map((p) => (\r\n            <Icon name={\"logo-\" + p} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport projects_ from \"../projects\";\r\nimport { projects as pType } from \"../types\";\r\n\r\nexport default function ProjectsScreen() {\r\n  const [projects, setProjects] = useState<pType>({});\r\n  useEffect(() => {\r\n    let ps = {};\r\n    Object.keys(projects_).forEach((project) => {\r\n      const id = projects_[project].type;\r\n      const data = {...projects_[project], id: project}\r\n      if (ps[id]) ps[id] = [...ps[id], data];\r\n      else ps[id] = [data];\r\n    });\r\n    setProjects(ps);\r\n    console.log(ps);\r\n  }, []);\r\n  return (\r\n    <div className=\"screen\">\r\n      {Object.keys(projects)?.map((t) => (\r\n        <>\r\n          <h2>{t}</h2>\r\n          <div className=\"grid\">\r\n            {projects[t].map((p) => (\r\n              <Card\r\n                key={p.id}\r\n                name={p.name}\r\n                logo={p.logo}\r\n                platforms={p.platforms}\r\n                id={p.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Routes, Route, Outlet, NavLink, Navigate } from \"react-router-dom\";\nimport IndexScreen from \"./screens/Index\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Icon from \"./components/Icon\";\nimport ProjectScreen from \"./screens/Project\";\nimport ProjectsScreen from \"./screens/Projects\";\n\nfunction Layout() {\n  return (\n    <>\n      <Navbar>\n        <Container fluid>\n          <Nav>\n            <Nav.Item>\n              <NavLink to=\"/\">\n                <Icon name=\"home-outline\" />\n                Inicio\n              </NavLink>\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink to=\"projects\">\n                <Icon name=\"git-branch-outline\" /> Proyectos\n              </NavLink>\n            </Nav.Item>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Outlet />\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<IndexScreen />} />\n        <Route path=\"projects\" element={<ProjectsScreen />} />\n        <Route path=\"projects/:name\" element={<ProjectScreen />} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}